rm(list=ls())
#Lectura de los datos
data(package="ISLR")
carseats<-Carseats
setwd("C:/Users/Henry N/Desktop/KSchool/my_course/day_1/Decision_tree")
rm(list=ls())
#Lectura de los datos
data(package="ISLR")
carseats<-Carseats
#--------------------------------------------------------------------------------------------------- #
#  ____    _                    _           ____                    __   _   _
# / ___|  | |_    __ _   _ __  | |_   _    |  _ \   _ __    ___    / _| (_) | |   ___
# \___ \  | __|  / _` | | '__| | __| (_)   | |_) | | '__|  / _ \  | |_  | | | |  / _ \
#  ___) | | |_  | (_| | | |    | |_   _    |  __/  | |    | (_) | |  _| | | | | |  __/
# |____/   \__|  \__,_| |_|     \__| (_)   |_|     |_|     \___/  |_|   |_| |_|  \___|
#--------------------------------------------------------------------------------------------------- #
if (!require("splines")){install.packages("splines",verbose = F) ; library("splines")}
if (!require("ISLR")){install.packages("ISLR",verbose = F) ; library("ISLR")}
print("All packages and functions have been installed or loaded...")
#----------------------------------------------------------------------------------- #
#  _____               _         ____                    __   _   _
# | ____|  _ __     __| |  _    |  _ \   _ __    ___    / _| (_) | |   ___
# |  _|   | '_ \   / _` | (_)   | |_) | | '__|  / _ \  | |_  | | | |  / _ \
# | |___  | | | | | (_| |  _    |  __/  | |    | (_) | |  _| | | | | |  __/
# |_____| |_| |_|  \__,_| (_)   |_|     |_|     \___/  |_|   |_| |_|  \___|
#----------------------------------------------------------------------------------- #
rm(list=ls())
#Lectura de los datos
data(package="ISLR")
carseats<-Carseats
names(carseats)
#Previsualizacion de los datos
hist(carseats$Sales)
High = ifelse(carseats$Sales<=8, "No", "Yes")
carseats$Sales
carseats = data.frame(carseats, High)
tree.carseats = tree(High~.-Sales, data=carseats)
if (!require("tree")){install.packages("tree",verbose = F) ; library("tree")}
High = ifelse(carseats$Sales<=8, "No", "Yes")
carseats = data.frame(carseats, High)
tree.carseats = tree(High~.-Sales, data=carseats)
plot(carseats)
#Clase de cada variable
sapply(carseats,class)
#Lectura de los datos
data(package="ISLR")
?Carseats
#Borramos los datos
rm(list=ls())
#Lectura de los datos
data(package="ISLR")
carseats<-Carseats
names(carseats)
#---- Pregunta 1: Previsualizacion de los datos ------#
hist(carseats$Sales)
#---- Pregunta 1: Previsualizacion de los datos ------#
hist(carseats$Sales,prob=T)
lines(density(carseats$Sales))
#Clase de cada variable
sapply(carseats,class)
?Carseats
cor(carsears)
cor(carseats)
cor(carseats[1:5])
corplot(cor(carseats[1:5]))
library(corrplot)
corrplot(cor(carseats[1:5]))
?ifelse
carseats$Sales
summary(carseats$Sales)
High = ifelse(carseats$Sales<=8, "No", "Yes")
carseats = data.frame(carseats, High)
head(carseats)
cbind(carseats,High)
head(cbind(carseats,High))
?tree
tree.carseats = tree(High ~ .-Sales, data=carseats)
summary(tree.carseats)
plot(tree.carseats)
text(tree.carseats, pretty = 0)
tree.carseats
set.seed(101)
train=sample(1:nrow(carseats), 250)
train
tree.carseats = tree(Sales~.-High, carseats, subset=train)
plot(tree.carseats)
text(tree.carseats, pretty=0)
?Carseats
plot(tree.carseats)
text(tree.carseats, pretty = 0)
tree.carseats
tree.pred = predict(tree.carseats, carseats[-train,], type="class")
tree.pred = predict(tree.carseats, carseats[-train,])
tree.pred
#Borramos los datos
rm(list=ls())
#Lectura de los datos
data(package="ISLR")
carseats<-Carseats
names(carseats)
#---- Pregunta 1: Previsualizacion de los datos ------#
hist(carseats$Sales)
#Clase de cada variable
sapply(carseats,class)
#---- Pregunta 2: Clssification decision tree ------#
High = ifelse(carseats$Sales<=8, "No", "Yes")
carseats = data.frame(carseats, High)
tree.carseats = tree(High ~ .-Sales, data=carseats)
summary(tree.carseats)
#---- Pregunta 3: Analisis grafico ------#
plot(tree.carseats)
text(tree.carseats, pretty = 0)
tree.carseats
#---- Pregunta 4 y 5: Estimaci?n con decision trees ------#
set.seed(101)
train=sample(1:nrow(carseats), 250)
tree.pred = predict(tree.carseats, carseats[-train,],type = "class")
tree.pred
table(tree.pred)
with(carseats[-train,], table(tree.pred, High))
conf_matrix<-with(carseats[-train,], table(tree.pred, High))
conf_matrix[2,2]/sum(conf_matrix[,2])
conf_matrix[1,1]/sum(conf_matrix[,1])
(conf_matrix[1,1]+conf_matrix[2,2])/sum(conf_matrix)
cv.carseats = cv.tree(tree.carseats_reg, FUN = prune.misclass)
tree.carseats_reg = tree(Sales~.-High, carseats, subset=train)
cv.carseats = cv.tree(tree.carseats_reg, FUN = prune.misclass)
cv.carseats = cv.tree(tree.carseats, FUN = prune.misclass)
cv.carseats
?cv.tree
plot(cv.carseats)
prune.carseats = prune.misclass(tree.carseats, best = 12)
plot(prune.carseats)
text(prune.carseats, pretty=0)
tree.pred = predict(prune.carseats, carseats[-train,], type="class")
with(carseats[-train,], table(tree.pred, High))
High
table(High)
