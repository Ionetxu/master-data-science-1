?logLik
a<-3
a<-1
b<-1
c<--1
(-b+sqrt(b^2-4*a*c))/2
sol1<-(-b+sqrt(b^2-4*a*c))/2
sol2<-(-b-sqrt(b^2-4*a*c))/2
sol.quad=function(a,b,c){}
sol.quad=function(a,b,c){}
sol.quad=function(a,b,c){
sol1<-(-b+sqrt(b^2-4*a*c))/2
sol2<-(-b-sqrt(b^2-4*a*c))/2
return(c(sol1,sol2))
}
sol.quad(1,1,-1)
sol.quad(1,1,-1)[1]
ls()
getwd()
dir.create("C:/Users/Aturt/Documents/test")
warnings()
dir.create("C:/Users/Aturt/Desktop/test")
getwd()
setwd("C:/Users/Aturt/Desktop/test")
getwd)
getwd()
dir1<-getwd()
class(dir1)
class(sol1)
remove(a)
x<-c(3,2)
data("iris")
head(iris)
dim(iris)
levels(iris$Species)
sol.quad(1,1,-(2*683/55))
sol.quad(1,1,-(2*683))
install.packages("https://github.com/rafalab/dslabs")
install.packages("dslabs")
install.packages("eurostat")
library(eurostat)
transport=read.delim("EU.stats.transport.txt", header = T, sep="\t")
transport=read.delim("datasets_R_basics/EU.stats.transport.txt", header = T, sep="\t")
head(transport)
class(transport)
transport$vehicle
class(transport$vehicle)
as.matrix(transport$vehicle
asdasdas
as.matrix(transport$vehicle)
b<-as.factor(1,2,3)
b<-as.factor(c(1,2,3))
str(transport)
transport=read.delim("datasets_R_basics/EU.stats.transport.txt", header = T, sep="\t", stringsAsFactors = F)
str(transport)
view(transport)
geo.v<-transport$geo
class(geo.v)
geo.v == "AT"
z<-geo.v == "AT"
which(z)
identical(transport[["geo"]],geo.v)
table(geo.v)
levels(transport$vehicle)
len(table(transport$vehicle))
length(table(transport$vehicle))
table(transport)
table(transport$geo)
table(transport$geo, transport$time)
table(transport$geo, transport$time, transport$vehicle)
which(transport$geo == "AT")
which(transport$geo == "AT", transport$vehicle == "TRN")
which(transport$geo == "AT" & transport$vehicle == "TRN")
which(transport$geo == "AT" & transport$vehicle == "TRN" & transport$time == 1990)
sum(transport$geo == "AT" & transport$vehicle == "TRN" & transport$time == 1990)
i<-which(transport$geo == "AT" & transport$vehicle == "TRN" & transport$time == 1990)
transport[i,]
a<-c(3,2)
b<-c(1,1)
c(a,b)
cbind(a,b)
dummy<-data.frame(names=c("a","b","c"),age=c(23,1,3))
dummy
values<-transport$values
sort(values)
sort(values)[1:10]
order(values)[1:10]
sort(values, decreasing = T)[1:10]
rank(values)[1:10]
data.babies<-read.delim("datasets_R_Basics/babies.txt", header=T, sep="\t", stringsAsFactors = F)
head(data.babies)
view(data.babies)
sort(data.babies$bwt)[1]
sort(data.babies$bwt)[-1]
sort(data.babies$bwt, decreasing=F)[1]
sort(data.babies$bwt, decreasing=T)[1]
order(data.babies$bwt)[1]
data.babies[979]
data.babies[979,]
max(data.babies)
max(data.babies$bwt)
min(data.babies$bwt)
which.max(data.babies$bwt)
which.min(data.babies$bwt)
which(data.babies$bwt>100)
data.babies[which.min(data.babies$bwt),]
data.babies[which.max(data.babies$bwt),]
count.fields(data.babies$smoke==0)
table(data.babies$smoke==0)
uw <- data.babies$bwt < 120
uw
uw <- which(data.babies$bwt < 120)
ux
uw
nw <- which(data.babies$bwt >= 120)
bwt.cat = vector(length=length(data.babies$bwt))
bwt.cat[uw]<-"Underweight"
bwt.cat[nw]<-"Normal weight"
head(data.babies)
data.babies$bwt.cat=bwt.cat
head(data.babies)
len(uw)
length(uw)
length(nw)
table(data.babies$bwt.cat == "Underweight")
which(data.babies$bwt.cat == "Underweight")
data.babies[which(data.babies$bwt.cat == "Underweight")]
sum(data.babies$bwt.cat == "Underweight")
sum(data.babies$bwt.cat == "Underweight" & data.babies$smoke == 0)
table(data.babies$bwt.cat, data.babies$smoke)
data.babies[which(data.babies$gestation == 999)] <- NA
data.babies[which(data.babies$gestation == 999),] <- NA
which(data.babies$gestation == 999)
data.babies[90]
,
which(is.na(data.babies$gestation))
data.babies[90,]
data.babies<-read.delim("datasets_R_Basics/babies.txt", header=T, sep="\t", stringsAsFactors = F)
head(data.babies)
view(data.babies)
sort(data.babies$bwt)[1]
sort(data.babies$bwt, decreasing=T)[1]
order(data.babies$bwt)[1]
data.babies[979,]
max(data.babies$bwt)
min(data.babies$bwt)
which.max(data.babies$bwt)
which.min(data.babies$bwt)
which(data.babies$bwt>100)
data.babies[which.min(data.babies$bwt),]
data.babies[which.max(data.babies$bwt),]
table(data.babies$smoke==0)
uw <- which(data.babies$bwt < 120)
nw <- which(data.babies$bwt >= 120)
bwt.cat = vector(length=length(data.babies$bwt))
bwt.cat[uw]<-"Underweight"
bwt.cat[nw]<-"Normal weight"
data.babies$bwt.cat=bwt.cat
sum(data.babies$bwt.cat == "Underweight" & data.babies$smoke == 0)
table(data.babies$bwt.cat, data.babies$smoke)
data.babies$gestation[which(data.babies$gestation == 999),] <- NA
which(is.na(data.babies$gestation))
which(is.na(data.babies$gestation))
data.babies$gestation[which(data.babies$gestation == 999)] <- NA
which(is.na(data.babies$gestation))
data.babies[90]
data.babies[90,]
library(dplyr)
install.packages("dplyr")
library(dplyr)
?filter
?dplyr::filter()
data.babies <- mutate(data.babies,gest.wk=gestation/7)
head(data.babies)
filter(data.babies,gest.wk<14)
filter(data.babies,gest.wk<15)
filter(data.babies,gest.wk<20)
filter(data.babies,gest.wk<30)
small.babies = select(data.babies,bwt, somke, age, gest.wk)
small.babies = select(data.babies,bwt, smoke, age, gest.wk)
data.babies %-% select(bwt, age, smoke, gest.wk) %-% filter(get.wk<34)
data.babies %>% select(bwt, age, smoke, gest.wk) %>% filter(get.wk<34)
data.babies %>% select(bwt, age, smoke, gest.wk) %>% filter(gest.wk<34)
head(transport)
transport %>% select(time,geo,vehicle,values) %>% filter(geo=="UK", vehicle=="CAR") %>% select(time,values)
transport %>% select(time,geo,vehicle,values) %>% filter(geo=="TK", vehicle=="CAR") %>% select(time,values)
transport %>% select(time,geo,vehicle,values) %>% filter(geo=="TR", vehicle=="CAR") %>% select(time,values)
tk <- transport %>% select(time,geo,vehicle,values) %>% filter(geo=="TR", vehicle=="CAR") %>% select(time,values)
uk <- transport %>% select(time,geo,vehicle,values) %>% filter(geo=="UK", vehicle=="CAR") %>% select(time,values)
plot(uk)
plot(uk,pch=".")
lines(uk)
plot(uk,pch=".",ylim=c(0,100))
lines(uk)
lines(tr)
tr <- transport %>% select(time,geo,vehicle,values) %>% filter(geo=="TR", vehicle=="CAR") %>% select(time,values)
lines(tr)
lines(tr,lty=2)
plot(uk,pch=".",ylim=c(0,100))
lines(uk)
lines(tr,lty=2)
aggregate(transport$values,by=list(transport$time),mean,na.rm=T)
mean.eu.car <- aggregate(transport$values,by=list(transport$time),mean,na.rm=T)
lines(mean.eu.car,col="red")
library(dslabs)
head(murders)
murders[order(murders$total)]
murders$state[order(murders$total)]
murders$state[order(murders$total)][1]
mutate(murders, per100 = total/population * 100)
murders <- mutate(murders, per100 = total/population * 100)
murder$state[order(murders$per100)][1]
murders$state[order(murders$per100)][1]
aggregate(murders$total,by=list(murders$region),sum)
